// Generated by dia2code
#ifndef ENGINE__COMMAND__H
#define ENGINE__COMMAND__H

#include <stack>
#include <memory>
#include <json/json.h>

namespace state {
  class State;
};
namespace engine {
  class Action;
  class Command;
}

#include "CommandTypeId.h"
#include "Action.h"
#include "state/State.h"

namespace engine {

  /// class Command - 
  class Command {
    // Attributes
  protected:
    CommandTypeId m_commandTypeId;
    // Operations
  public:
    virtual ~Command ();
    virtual CommandTypeId getTypeId () const;
    virtual void execute (state::State& state, std::stack<std::shared_ptr<Action>>& actions);
    virtual void serialize (Json::Value& out);
    virtual Command* deserialize (Json::Value& in);
    // Setters and Getters
  };

};

#endif
